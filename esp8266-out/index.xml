<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Program the ESP8266 on RHTE 2023 Edge Lab</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/</link><description>Recent content in Program the ESP8266 on RHTE 2023 Edge Lab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://RHTE-2023-Edge-Lab.github.io/esp8266-out/index.xml" rel="self" type="application/rss+xml"/><item><title>Fix permissions on /dev/ttyUSB0 (Linux only)</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/fix-permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/fix-permissions/</guid><description>The /dev/ttyUSB0 device belongs to the &amp;ldquo;dialout&amp;rdquo; group. Therefore, your user should belong to this group to configure the ESP8266.
Run this command:
sudo usermod -a -G dialout $(id -un) Then, close Visual Studio Code and re-run it with the new group membership:
su -c code $(id -un)</description></item><item><title>Connect your ESP8266</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/connect-esp8266/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/connect-esp8266/</guid><description>Connect ESP8266 to your computer via USB connector.</description></item><item><title>Create a PlatformIO project</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/create-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/create-project/</guid><description>Open VScode and click on the home icon in the status bar. Restart your VSCode if the home icon does not appear.
Then, in the PlatformIO splash screen (PIO HOME tab), click New Project.
Then choose a name for your project (free choice), select the board WeMos D1 R2 and mini, leave the Arduino framework selected and click Finish.
Then, you should see the following files in the left pane of your VScode.</description></item><item><title>Add required libraries</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/libraries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/libraries/</guid><description>Add the following libraries to your PlatformIO project.
MFRC522 In the PlatformIO home screen, open Libraries. In the search field, type: header:MFRC522.h The first result should be MFRC522 by Miguel Andr√© Balboa. Click to open it. Click Add to project Click Add PubSubClient In the PlatformIO home screen, open Libraries. In the search field, type: PubSubClient The first result should be PubSubClient by Nick O&amp;rsquo;Leary.</description></item><item><title>Develop the ESP8266 firmware</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/development/</guid><description>In the left pane of VScode, click the top-left icon to diplay the project&amp;rsquo;s files.
Replace the content of src/main.cpp with the following code.
Warning: you will have to adapt the code a little bit. See below for explanations.
You need to retrieve the load balancer url of the MQTT service.
Go to the OpenShift Administrator console and click the command line terminal icon &amp;gt;_ in the top-right corner to open a Web Terminal.</description></item><item><title>Test the ESP8266 firmware</title><link>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/esp8266-out/test/</guid><description>Connect to your ESP8266 console Place an RFID tag on the reader Check that the tag id is printed on the console Check that the tag is also sent over Wifi to the MQTT broker: Go to the OpenShift Administrator console and click the command line terminal icon &amp;gt;_ in the top-right corner to open a Web Terminal. Run the following commands:
# Get the load balancer URL generated from the service created LOAD_BALANCER_URL=$(oc get svc mqtt-lb -ojsonpath=&amp;#34;{.</description></item></channel></rss>