<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Use Case on RHTE 2023 Edge Lab</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/</link><description>Recent content in Use Case on RHTE 2023 Edge Lab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 23 Dec 2022 16:31:20 +0100</lastBuildDate><atom:link href="https://RHTE-2023-Edge-Lab.github.io/use-case/index.xml" rel="self" type="application/rss+xml"/><item><title>Goal</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/goal/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/goal/</guid><description>Your goal will be to deploy everything needed to: read the parcel RFID (using arduino and ESP32), send data to a MQTT broker over wifi, transform those data using Camel-K and send relevant events over Kafka to the headquarter for reporting.
The headquarter is already setup and is waiting for your data!
Once your setup is complete, you should be able to scan your parcels (look around you, there should be four parcels on your table!</description></item><item><title>Architecture</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/architecture/</guid><description>Data flow 1. The ESP8266 scans incoming and outgoing parcels using an RFID scanner. One ESP8266 is dedicated for incoming parcels and one ESP8266 is dedicated for outgoing parcels.
2. The ESP8266 dedicated to incoming parcels writes the RFID tag identifier in the mqtt-in MQTT topic. The ESP8266 dedicated to outgoing parcels writes the RFID tag identifier in the mqtt-out MQTT topic.
3. The Camel K operator transforms and enriches MQTT messages stored in MQTT topics and injects those enriched data in the kafka-in and kafka-out Kafka topics.</description></item><item><title>Organization</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/organization/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/organization/</guid><description>At your table, there should be six persons and there should be ten tables. During this lab, you will work in pair programming (that is to say: three duo).
Duo A is in charge of implementing the code on ESP8266 to scan the incoming parcels using RFID and send the data over MQTT. Duo B is in charge of implementing the code on ESP8266 to scan the outgoing parcels using RFID and send the data over MQTT.</description></item><item><title>Ice Breaker</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/ice-breaker/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/ice-breaker/</guid><description>TODO</description></item></channel></rss>