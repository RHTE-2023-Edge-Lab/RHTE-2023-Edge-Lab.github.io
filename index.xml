<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome on RHTE 2023 Edge Lab</title><link>https://RHTE-2023-Edge-Lab.github.io/</link><description>Recent content in Welcome on RHTE 2023 Edge Lab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Dec 2022 15:22:04 +0100</lastBuildDate><atom:link href="https://RHTE-2023-Edge-Lab.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Goal</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/goal/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/goal/</guid><description>Your goal will be to deploy everything needed to: read the parcel RFID (using arduino and ESP32), send data to a MQTT broker over wifi, transform those data using Camel-K and send relevant events over Kafka to the headquarter for reporting.
The headquarter is already setup and is waiting for your data!
Once your setup is complete, you should be able to scan your parcels (look around you, there should be four parcels on your table!</description></item><item><title>General</title><link>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/general/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/general/</guid><description>OpenShift environment description OpenShift cluster is already deployed via RHPDS environment and &amp;ldquo;OpenSHift 4.11 Workshop&amp;rdquo; service. The headquarter and warehouses corresponding to different namespace on this Openshift cluster on this way :
Namespace n°1 : headquarter Namespace n°2 : warehouse-athens Namespace n°3 : warehouse-brno Namespace n°4 : warehouse-brussels Namespace n°5 : warehouse-bucharest Namespace n°6 : warehouse-dublin Namespace n°7 : warehouse-lisboa Namespace n°8 : warehouse-london Namespace n°9 : warehouse-paris Namespace n°10 : warehouse-stockolm Namespace n°11 : warehouse-varsovia OpenShift Operators All needed operators are already installed on the Openshift cluster and you will just need to consume CRD provided by these operators during this session :</description></item><item><title>Organization</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/organization/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/organization/</guid><description>At your table, there should be six persons and there should be ten tables. During this lab, you will work in pair programming (that is to say: three duo).
Duo A is in charge of implementing the code on ESP8266 to scan the incoming parcels using RFID and send the data over MQTT. Duo B is in charge of implementing the code on ESP8266 to scan the outgoing parcels using RFID and send the data over MQTT.</description></item><item><title>Linux</title><link>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/linux/</guid><description>OpenShift CLI Install the OpenShift CLI.
curl -sSfL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.11.21/openshift-client-linux.tar.gz | tar -zx -C /usr/local/bin oc kubectl Install git.
sudo dnf install git Install VScode.
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc sudo sh -c &amp;#39;echo -e &amp;#34;[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&amp;#34; &amp;gt; /etc/yum.repos.d/vscode.repo&amp;#39; dnf check-update sudo dnf install code Open VScode and install the PlatformIO IDE plugin.</description></item><item><title>Architecture</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/architecture/</guid><description>Steps 1. Scan entrance and output packets via the ESP8266 RFID scanner. One ESP8266 dedicated for entrance packets and one ESP8266 dedicated for output packets.
2. The ESP8266 dedicated for entrance packets write the RFID id in mqtt the mqtt-in. The ESP8266 dedicated for output packets write the RFID id in the mqtt mqtt-out.
3. Camel K operator transform and enrich mqtt data stored in mqtt topics and inject these enriched data in kafka-in and kafka-out topics.</description></item><item><title>MacOS</title><link>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/macos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/macos/</guid><description>Install the OpenShift CLI.
curl -sSfL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-mac.tar.gz | tar -zx -C /usr/local/bin oc kubectl Install git.
brew install git Install mosquitto (for MQTT tests).
brew install mosquitto Install VScode.
https://code.visualstudio.com/download Open VScode and install the PlatformIO IDE plugin.</description></item><item><title>Ice Breaker</title><link>https://RHTE-2023-Edge-Lab.github.io/use-case/ice-breaker/</link><pubDate>Tue, 13 Dec 2022 15:22:04 +0100</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/use-case/ice-breaker/</guid><description>TODO</description></item><item><title>Windows</title><link>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://RHTE-2023-Edge-Lab.github.io/pre-requisites/windows/</guid><description>TODO</description></item></channel></rss>